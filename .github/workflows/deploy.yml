name: Deploy X-Fleet Frontend

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOCKER_IMAGE: princeagra21/x-fleet-frontend
  CONTAINER_NAME: x-fleet-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Pull the latest image
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          
          # Stop and remove the existing container
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true
          
          # Run the new container
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p 80:3000 \
            --restart unless-stopped \
            ${{ env.DOCKER_IMAGE }}:latest
          
          # Clean up unused images
          docker image prune -af
          
          # Show running containers
          docker ps --filter "name=${{ env.CONTAINER_NAME }}"

    - name: Health check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Wait for container to be ready
          sleep 10
          
          # Check if container is running
          if docker ps --filter "name=${{ env.CONTAINER_NAME }}" --format "table {{.Names}}\t{{.Status}}" | grep -q "${{ env.CONTAINER_NAME }}"; then
            echo "✅ Container is running successfully"
            
            # Test the endpoint
            if curl -f -s http://localhost > /dev/null; then
              echo "✅ Frontend is responding on port 80"
            else
              echo "❌ Frontend is not responding on port 80"
              exit 1
            fi
          else
            echo "❌ Container failed to start"
            docker logs ${{ env.CONTAINER_NAME }} --tail 20
            exit 1
          fi
